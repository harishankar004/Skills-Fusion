{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import './ProfilePage.css'; // ðŸ‘ˆ Import the external CSS file\n\n// const ProfilePage = () => {\n//   const email = localStorage.getItem(\"userEmail\");\n//   const [user, setUser] = useState(null);\n//   const [editMode, setEditMode] = useState(false);\n//   const [form, setForm] = useState({ name: '', role: '' });\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     if (!email) {\n//       setError('No email found in localStorage');\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetch(`http://localhost:8081/api/auth/${email}`)\n//       .then(res => {\n//         if (!res.ok) throw new Error(\"Failed to fetch user\");\n//         return res.json();\n//       })\n//       .then(data => {\n//         setUser(data);\n//         setForm({ name: data.name, role: data.role });\n//         setLoading(false);\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         setError('Failed to load profile.');\n//         setLoading(false);\n//       });\n//   }, [email]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setForm(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleUpdate = async () => {\n//     try {\n//       const res = await fetch(`http://localhost:8081/api/auth/${email}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ ...user, ...form }),\n//       });\n\n//       if (res.ok) {\n//         alert('Profile updated successfully');\n//         setEditMode(false);\n//         setUser(prev => ({ ...prev, ...form }));\n//       } else {\n//         alert('Update failed');\n//       }\n//     } catch (err) {\n//       alert('Server error');\n//       console.error(err);\n//     }\n//   };\n\n//   if (loading) return <p className=\"profile-loading\">Loading profile...</p>;\n//   if (error) return <p className=\"profile-error\">{error}</p>;\n\n//   return (\n//     <div className=\"profile-container\">\n//       <h2 className=\"profile-title\">User Profile</h2>\n//       <p><strong>Email:</strong> {user.email}</p>\n\n//       {editMode ? (\n//         <>\n//           <label>Name:</label>\n//           <input\n//             name=\"name\"\n//             value={form.name}\n//             onChange={handleChange}\n//           />\n\n//           <label>Role:</label>\n//           <select\n//             name=\"role\"\n//             value={form.role}\n//             onChange={handleChange}\n//           >\n//             <option value=\"CLIENT\">CLIENT</option>\n//             <option value=\"FREELANCER\">FREELANCER</option>\n//           </select>\n\n//           <button className=\"save-btn\" onClick={handleUpdate}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <p><strong>Name:</strong> {user.name}</p>\n//           <p><strong>Role:</strong> {user.role}</p>\n//           <button className=\"edit-btn\" onClick={() => setEditMode(true)}>Edit</button>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ProfilePage;","map":{"version":3,"names":[],"sources":["L:/Java_Fullstack/Skills-Fusion-Main/skillsfusion-client/src/components/ProfilePage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './ProfilePage.css'; // ðŸ‘ˆ Import the external CSS file\r\n\r\n// const ProfilePage = () => {\r\n//   const email = localStorage.getItem(\"userEmail\");\r\n//   const [user, setUser] = useState(null);\r\n//   const [editMode, setEditMode] = useState(false);\r\n//   const [form, setForm] = useState({ name: '', role: '' });\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     if (!email) {\r\n//       setError('No email found in localStorage');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     fetch(`http://localhost:8081/api/auth/${email}`)\r\n//       .then(res => {\r\n//         if (!res.ok) throw new Error(\"Failed to fetch user\");\r\n//         return res.json();\r\n//       })\r\n//       .then(data => {\r\n//         setUser(data);\r\n//         setForm({ name: data.name, role: data.role });\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(err => {\r\n//         console.error(err);\r\n//         setError('Failed to load profile.');\r\n//         setLoading(false);\r\n//       });\r\n//   }, [email]);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setForm(prev => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleUpdate = async () => {\r\n//     try {\r\n//       const res = await fetch(`http://localhost:8081/api/auth/${email}`, {\r\n//         method: 'PUT',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ ...user, ...form }),\r\n//       });\r\n\r\n//       if (res.ok) {\r\n//         alert('Profile updated successfully');\r\n//         setEditMode(false);\r\n//         setUser(prev => ({ ...prev, ...form }));\r\n//       } else {\r\n//         alert('Update failed');\r\n//       }\r\n//     } catch (err) {\r\n//       alert('Server error');\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p className=\"profile-loading\">Loading profile...</p>;\r\n//   if (error) return <p className=\"profile-error\">{error}</p>;\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <h2 className=\"profile-title\">User Profile</h2>\r\n//       <p><strong>Email:</strong> {user.email}</p>\r\n\r\n//       {editMode ? (\r\n//         <>\r\n//           <label>Name:</label>\r\n//           <input\r\n//             name=\"name\"\r\n//             value={form.name}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Role:</label>\r\n//           <select\r\n//             name=\"role\"\r\n//             value={form.role}\r\n//             onChange={handleChange}\r\n//           >\r\n//             <option value=\"CLIENT\">CLIENT</option>\r\n//             <option value=\"FREELANCER\">FREELANCER</option>\r\n//           </select>\r\n\r\n//           <button className=\"save-btn\" onClick={handleUpdate}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <p><strong>Name:</strong> {user.name}</p>\r\n//           <p><strong>Role:</strong> {user.role}</p>\r\n//           <button className=\"edit-btn\" onClick={() => setEditMode(true)}>Edit</button>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProfilePage;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}