{"ast":null,"code":"var _jsxFileName = \"L:\\\\Java_Fullstack\\\\Skills-Fusion-Main\\\\skillsfusion-client\\\\src\\\\components\\\\ChatViewApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatViewApplicants = () => {\n  _s();\n  const [applicants, setApplicants] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Example: fetch freelancers who applied to client’s projects\n    const clientEmail = localStorage.getItem(\"userEmail\");\n    fetch('http://localhost:8081/api/applications/client/${clientEmail}').then(res => res.json()).then(data => setApplicants(data)).catch(err => console.error(\"Failed to load applicants\", err));\n  }, []);\n  const handleChat = freelancerEmail => {\n    navigate(`/chat?to=${freelancerEmail}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applicants-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Freelancer Applicants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), applicants.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No applications yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: applicants.map((a, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"applicant-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 18\n          }, this), \" \", a.freelancerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 18\n          }, this), \" \", a.freelancerEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Proposal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this), \" \", a.proposal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChat(a.freelancerEmail),\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatViewApplicants, \"lyFWwKYmDBCFWWNUfPblaYVZM2w=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatViewApplicants;\nexport default ViewApplicants;\nvar _c;\n$RefreshReg$(_c, \"ChatViewApplicants\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ChatViewApplicants","_s","applicants","setApplicants","navigate","clientEmail","localStorage","getItem","fetch","then","res","json","data","catch","err","console","error","handleChat","freelancerEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","a","index","freelancerName","proposal","onClick","_c","ViewApplicants","$RefreshReg$"],"sources":["L:/Java_Fullstack/Skills-Fusion-Main/skillsfusion-client/src/components/ChatViewApplication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChatViewApplicants = () => {\r\n  const [applicants, setApplicants] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Example: fetch freelancers who applied to client’s projects\r\n    const clientEmail = localStorage.getItem(\"userEmail\");\r\n    fetch('http://localhost:8081/api/applications/client/${clientEmail}')\r\n      .then(res => res.json())\r\n      .then(data => setApplicants(data))\r\n      .catch(err => console.error(\"Failed to load applicants\", err));\r\n  }, []);\r\n\r\n  const handleChat = (freelancerEmail) => {\r\n    navigate(`/chat?to=${freelancerEmail}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"applicants-container\">\r\n      <h2>Freelancer Applicants</h2>\r\n      {applicants.length === 0 ? (\r\n        <p>No applications yet.</p>\r\n      ) : (\r\n        <ul>\r\n          {applicants.map((a, index) => (\r\n            <li key={index} className=\"applicant-card\">\r\n              <p><strong>Name:</strong> {a.freelancerName}</p>\r\n              <p><strong>Email:</strong> {a.freelancerEmail}</p>\r\n              <p><strong>Proposal:</strong> {a.proposal}</p>\r\n              <button onClick={() => handleChat(a.freelancerEmail)}>Chat</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewApplicants;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}