{"ast":null,"code":"var _jsxFileName = \"L:\\\\Java_Fullstack\\\\Skills-Fusion-Main\\\\skillsfusion-client\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst ChatBox = ({\n  senderId,\n  receiverId\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = over(socket);\n    stompClient.connect({}, onConnected);\n  }, []);\n  const onConnected = () => {\n    stompClient.subscribe(\"/topic/messages\", onMessageReceived);\n  };\n  const onMessageReceived = payload => {\n    const msg = JSON.parse(payload.body);\n    if (msg.senderId === senderId && msg.receiverId === receiverId || msg.senderId === receiverId && msg.receiverId === senderId) {\n      setChatHistory(prev => [...prev, msg]);\n    }\n  };\n  const sendMessage = () => {\n    const chatMessage = {\n      senderId,\n      receiverId,\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n    stompClient.send(\"/app/chat.send\", {}, JSON.stringify(chatMessage));\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.senderId === senderId ? \"sent\" : \"received\",\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"FynLgZUdvM4cv6Pe5TqmlnJWQVM=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","over","jsxDEV","_jsxDEV","stompClient","ChatBox","senderId","receiverId","_s","message","setMessage","chatHistory","setChatHistory","socket","connect","onConnected","subscribe","onMessageReceived","payload","msg","JSON","parse","body","prev","sendMessage","chatMessage","content","timestamp","Date","toISOString","send","stringify","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["L:/Java_Fullstack/Skills-Fusion-Main/skillsfusion-client/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\nlet stompClient = null;\r\n\r\nconst ChatBox = ({ senderId, receiverId }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS(\"http://localhost:8080/ws\");\r\n    stompClient = over(socket);\r\n    stompClient.connect({}, onConnected);\r\n  }, []);\r\n\r\n  const onConnected = () => {\r\n    stompClient.subscribe(\"/topic/messages\", onMessageReceived);\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    const msg = JSON.parse(payload.body);\r\n    if (\r\n      (msg.senderId === senderId && msg.receiverId === receiverId) ||\r\n      (msg.senderId === receiverId && msg.receiverId === senderId)\r\n    ) {\r\n      setChatHistory((prev) => [...prev, msg]);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    const chatMessage = {\r\n      senderId,\r\n      receiverId,\r\n      content: message,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    stompClient.send(\"/app/chat.send\", {}, JSON.stringify(chatMessage));\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-box\">\r\n      <div className=\"messages\">\r\n        {chatHistory.map((msg, index) => (\r\n          <div key={index} className={msg.senderId === senderId ? \"sent\" : \"received\"}>\r\n            {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,IAAI,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,IAAIC,WAAW,GAAG,IAAI;AAEtB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAG,IAAIb,MAAM,CAAC,0BAA0B,CAAC;IACrDI,WAAW,GAAGH,IAAI,CAACY,MAAM,CAAC;IAC1BT,WAAW,CAACU,OAAO,CAAC,CAAC,CAAC,EAAEC,WAAW,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBX,WAAW,CAACY,SAAS,CAAC,iBAAiB,EAAEC,iBAAiB,CAAC;EAC7D,CAAC;EAED,MAAMA,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;IACpC,IACGH,GAAG,CAACb,QAAQ,KAAKA,QAAQ,IAAIa,GAAG,CAACZ,UAAU,KAAKA,UAAU,IAC1DY,GAAG,CAACb,QAAQ,KAAKC,UAAU,IAAIY,GAAG,CAACZ,UAAU,KAAKD,QAAS,EAC5D;MACAM,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,GAAG,CAAC,CAAC;IAC1C;EACF,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG;MAClBnB,QAAQ;MACRC,UAAU;MACVmB,OAAO,EAAEjB,OAAO;MAChBkB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IACDzB,WAAW,CAAC0B,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAEV,IAAI,CAACW,SAAS,CAACN,WAAW,CAAC,CAAC;IACnEf,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEP,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB9B,OAAA;MAAK6B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBtB,WAAW,CAACuB,GAAG,CAAC,CAACf,GAAG,EAAEgB,KAAK,kBAC1BhC,OAAA;QAAiB6B,SAAS,EAAEb,GAAG,CAACb,QAAQ,KAAKA,QAAQ,GAAG,MAAM,GAAG,UAAW;QAAA2B,QAAA,EACzEd,GAAG,CAACO;MAAO,GADJS,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MACEqC,KAAK,EAAE/B,OAAQ;MACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFpC,OAAA;MAAQ0C,OAAO,EAAErB,WAAY;MAAAS,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApDIH,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}