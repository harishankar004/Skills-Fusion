{"ast":null,"code":"var _jsxFileName = \"L:\\\\Java_Fullstack\\\\Skills-Fusion-Main\\\\skillsfusion-client\\\\src\\\\components\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [searchParams] = useSearchParams();\n  const senderEmail = localStorage.getItem('userEmail');\n  const receiverEmail = searchParams.get('to'); // ?to=clientEmail\n\n  const fetchMessages = async () => {\n    try {\n      const res = await fetch(`http://localhost:8081/api/chat/messages?user1=${senderEmail}&user2=${receiverEmail}`);\n      const data = await res.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!text.trim()) return;\n    try {\n      await fetch('http://localhost:8081/api/chat/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          senderEmail,\n          receiverEmail,\n          message: text\n        })\n      });\n      setText('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", receiverEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.senderEmail === senderEmail ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"FPMCUn89iZZvoQmEKTslRoK5Wik=\", false, function () {\n  return [useSearchParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","text","setText","searchParams","senderEmail","localStorage","getItem","receiverEmail","get","fetchMessages","res","fetch","data","json","error","console","sendMessage","trim","method","headers","body","JSON","stringify","message","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","Date","timestamp","toLocaleTimeString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["L:/Java_Fullstack/Skills-Fusion-Main/skillsfusion-client/src/components/ChatPage.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './ChatPage.css';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst ChatPage = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [text, setText] = useState('');\r\n  const [searchParams] = useSearchParams();\r\n  const senderEmail = localStorage.getItem('userEmail');\r\n  const receiverEmail = searchParams.get('to'); // ?to=clientEmail\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8081/api/chat/messages?user1=${senderEmail}&user2=${receiverEmail}`);\r\n      const data = await res.json();\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      await fetch('http://localhost:8081/api/chat/send', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          senderEmail,\r\n          receiverEmail,\r\n          message: text,\r\n        }),\r\n      });\r\n      setText('');\r\n      fetchMessages();\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Chat with {receiverEmail}</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-message ${msg.senderEmail === senderEmail ? 'sent' : 'received'}`}\r\n          >\r\n            <p>{msg.message}</p>\r\n            <span>{new Date(msg.timestamp).toLocaleTimeString()}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}